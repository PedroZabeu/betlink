# BetLink - An√°lise Completa do Database

## 1. üìä Informa√ß√µes do Front que Dependem do DB (Por P√°gina)

### **√ÅREA P√öBLICA**

#### **Landing Page (/)**
- **Estat√≠sticas da plataforma**: `COUNT(canais)`, `COUNT(profiles WHERE role='cliente')`, `AVG(roi)`, `COUNT(apostas)`
- **Canais em destaque**: `canais` + `canal_stats` (top 6 por ROI ou receita)
- **Depoimentos**: Futuramente de `avaliacoes` ou est√°tico

#### **P√°gina de Canais (/canais)**
- **Lista de canais**: `canais` + `profiles` (tipster) + `canal_stats`
- **Filtros**: `canais.preco_mensal`, `canal_stats.roi_percentage`, `canais.status`
- **Cards de canais**: Nome, avatar, ROI, total apostas, pre√ßo, status vagas
- **Contador**: `COUNT(canais WHERE status='ativo')`

#### **P√°gina Individual do Canal (/canal/[id])**
- **Dados do canal**: `canais` + `profiles` (tipster)
- **M√©tricas**: `canal_stats` (ROI, total apostas, taxa acerto)
- **Status de vagas**: `COUNT(assinaturas)` vs `canais.max_assinantes`

### **√ÅREA DO CLIENTE**

#### **Dashboard (/dashboard)**
- **Cards resumo**: 
  - Quantidade assinaturas: `COUNT(assinaturas WHERE cliente_id = user.id)`
  - Custo total: `SUM(assinaturas.preco_pago WHERE status='ativa')`
- **Tabela de canais**: `assinaturas` + `canais` + `profiles`
- **Status badges**: `assinaturas.status`, `assinaturas.data_vencimento`

### **√ÅREA DO TIPSTER**

#### **Meus Canais (/meus-canais)**
- **Grid de canais**: `canais` + `canal_stats`
- **Solicita√ß√µes pendentes**: `solicitacoes_canais WHERE tipster_id = user.id`
- **Contador**: `COUNT(canais WHERE tipster_id = user.id)`

#### **Solicitar Canal (/solicitar-canal)**
- **Valida√ß√£o username**: Verificar se `telegram_username` est√° dispon√≠vel
- **Dados do tipster**: `profiles` para preencher automaticamente

#### **P√°gina do Canal - Clientes (/[canal]/clientes)**
- **Cards resumo**: `canal_stats` (clientes ativos, lista espera, receita)
- **Gr√°fico temporal**: `assinaturas` agrupadas por m√™s
- **Tabela clientes**: `assinaturas` + `profiles`

#### **P√°gina do Canal - Apostas (/[canal]/apostas)**
- **Cards resumo**: Calculados de `apostas` (unidades lucradas, apostadas, ROI)
- **Gr√°fico acumulado**: `apostas` ordenadas por data
- **Tabela apostas**: `apostas` com filtros

#### **Minhas Solicita√ß√µes (/minhas-solicitacoes)**
- **Tabela solicita√ß√µes**: `solicitacoes_canais WHERE tipster_id = user.id`
- **Status e observa√ß√µes**: `solicitacoes_canais.status`, `observacoes_admin`

### **√ÅREA ADMIN**

#### **Dashboard Admin (/admin/dashboard)**
- **Cards m√©tricas**: `COUNT(*)` de cada tabela principal
- **Gr√°ficos**: Dados agrupados por per√≠odo de `canais`, `profiles`, `assinaturas`
- **Atividades recentes**: `logs_atividade` (√∫ltimas 20)
- **Alertas**: Calculados (vencimentos, problemas, solicita√ß√µes pendentes)

#### **Gest√£o de Tipsters (/admin/tipsters)**
- **Tabela tipsters**: `profiles WHERE role='tipster'` + `canal_stats` agregadas
- **Filtros**: `profiles.status`, performance calculada, datas

#### **Gest√£o de Canais (/admin/canais)**
- **Tabela global**: `canais` + `profiles` + `canal_stats`
- **Status Telegram**: `canais.telegram_sync_status`
- **Filtros**: Status, tipster, performance, receita

#### **Solicita√ß√µes (/admin/solicitacoes)**
- **Tabela solicita√ß√µes**: `solicitacoes_canais` + `profiles`
- **Filtros**: Status, tipster, data

#### **Gest√£o de Clientes (/admin/clientes)**
- **Tabela clientes**: `profiles WHERE role='cliente'` + dados agregados
- **M√©tricas**: `assinaturas` e `pagamentos` agregados

#### **Relat√≥rios (/admin/relatorios)**
- **Todos os gr√°ficos**: Dados agregados de todas as tabelas principais
- **M√©tricas consolidadas**: Views calculadas ou queries complexas

---

## 2. üóÉÔ∏è Tabelas que Devem Ser Criadas

### **TABELAS PRINCIPAIS (Obrigat√≥rias)**
1. **`profiles`** - Extens√£o do auth.users do Supabase
2. **`canais`** - Canais de tips
3. **`solicitacoes_canais`** - Solicita√ß√µes de novos canais
4. **`assinaturas`** - Assinaturas de clientes aos canais
5. **`apostas`** - Apostas dos tipsters (apenas via Telegram)
6. **`lista_espera`** - Fila de espera para canais lotados
7. **`pagamentos`** - Hist√≥rico de pagamentos
8. **`logs_atividade`** - Auditoria de a√ß√µes
9. **`configuracoes`** - Configura√ß√µes do sistema

### **TABELAS FUTURAS (Nice to Have)**
10. **`avaliacoes`** - Avalia√ß√µes de clientes sobre canais
11. **`promocoes`** - C√≥digos promocionais
12. **`notificacoes`** - Sistema de notifica√ß√µes
13. **`tickets_suporte`** - Sistema de suporte
14. **`webhook_logs`** - Logs da integra√ß√£o Telegram

---

## 3. üîó Rela√ß√µes Entre Tabelas

### **DIAGRAMA DE RELACIONAMENTOS**

```
auth.users (Supabase)
    ‚Üì 1:1
profiles (role: master/admin/tipster/cliente)
    ‚Üì 1:N
canais (tipster_id ‚Üí profiles.id)
    ‚Üì 1:N                    ‚Üì 1:N
assinaturas              apostas
(cliente_id ‚Üí profiles.id)
    ‚Üì 1:N
pagamentos

profiles (tipster)
    ‚Üì 1:N
solicitacoes_canais
    ‚Üì 1:1 (se aprovado)
canais (canal_criado_id)

canais
    ‚Üì 1:N
lista_espera (cliente_id ‚Üí profiles.id)
```

### **RELACIONAMENTOS DETALHADOS**

#### **`profiles` (Central)**
- **1:N** com `canais` (tipster_id)
- **1:N** com `assinaturas` (cliente_id)
- **1:N** com `solicitacoes_canais` (tipster_id)
- **1:N** com `lista_espera` (cliente_id)
- **1:N** com `logs_atividade` (user_id)

#### **`canais`**
- **N:1** com `profiles` (tipster_id)
- **1:N** com `assinaturas` (canal_id)
- **1:N** com `apostas` (canal_id)
- **1:N** com `lista_espera` (canal_id)
- **1:1** com `solicitacoes_canais` (canal_criado_id)

#### **`assinaturas`**
- **N:1** com `profiles` (cliente_id)
- **N:1** com `canais` (canal_id)
- **1:N** com `pagamentos` (assinatura_id)

#### **`apostas`**
- **N:1** com `canais` (canal_id)
- **Sem relacionamento direto** com clientes (transpar√™ncia)

---

## 4. ‚ö†Ô∏è Pontos de Aten√ß√£o (Sincroniza√ß√£o)

### **CONSIST√äNCIA DE DADOS**

#### **M√©tricas de Canais (CR√çTICO)**
**Problema**: ROI, total apostas, receita aparecem em m√∫ltiplas telas
**Solu√ß√£o**: 
- **View `canal_stats`** calculada em tempo real
- **Triggers** para recalcular quando apostas/assinaturas mudam
- **Cache inteligente** no frontend (5 min)

**Telas afetadas**:
- `/canais` (cards dos canais)
- `/canal/[id]` (m√©tricas do canal)
- `/[canal]/clientes` (cards resumo)
- `/[canal]/apostas` (cards resumo)
- `/admin/canais` (tabela global)

#### **Status de Assinaturas (CR√çTICO)**
**Problema**: Status aparece no dashboard cliente e √°rea admin
**Solu√ß√£o**:
- **C√°lculo autom√°tico** baseado em `data_vencimento`
- **Trigger di√°rio** para atualizar status vencidos
- **Sincroniza√ß√£o Telegram** autom√°tica

**Telas afetadas**:
- `/dashboard` (tabela de canais)
- `/[canal]/clientes` (lista de clientes)
- `/admin/clientes` (status global)

#### **Contadores de Usu√°rios (M√âDIO)**
**Problema**: Total de tipsters/clientes no dashboard admin
**Solu√ß√£o**:
- **Queries COUNT()** em tempo real
- **Cache** de 1 hora para estat√≠sticas
- **Invalida√ß√£o** quando novos usu√°rios s√£o criados

#### **Sincroniza√ß√£o Telegram (CR√çTICO)**
**Problema**: Status do Telegram deve refletir realidade
**Solu√ß√£o**:
- **Campo `telegram_sync_status`** em canais
- **Webhook** para atualiza√ß√µes em tempo real
- **Job** para verifica√ß√£o peri√≥dica de sa√∫de

### **INTEGRIDADE REFERENCIAL**

#### **Exclus√µes em Cascata**
- **Tipster deletado** ‚Üí Canais ficam √≥rf√£os ‚ùå
- **Solu√ß√£o**: `ON DELETE RESTRICT` + transfer√™ncia manual

#### **Assinaturas Ativas**
- **Canal pausado** ‚Üí Assinaturas continuam ativas ‚úÖ
- **Canal deletado** ‚Üí Assinaturas canceladas automaticamente ‚úÖ

---

## 5. üíæ Dados Inputados vs Calculados

### **DADOS INPUTADOS (Manual)**

#### **Por Admins**
- **Tipsters**: Nome, email, telefone, telegram_username, biografia
- **Canais**: Nome, descri√ß√£o, pre√ßo, max_assinantes, mercados
- **Configura√ß√µes**: Bot tokens, comiss√µes, configura√ß√µes gerais

#### **Por Tipsters**
- **Solicita√ß√µes**: Todos os campos do formul√°rio de solicita√ß√£o
- **Status das apostas**: √önica altera√ß√£o permitida nas apostas

#### **Por Clientes**
- **Perfil**: Nome, telefone, telegram_username no cadastro
- **Assinaturas**: A√ß√£o de assinar/cancelar

#### **Por Sistema Externo (Telegram)**
- **Apostas**: Todos os campos via template do bot
- **Telegram IDs**: Obtidos automaticamente via API

### **DADOS CALCULADOS (Autom√°tico)**

#### **Triggers em Tempo Real**
- **`apostas.lucro_calculado`**: Baseado em status, odd, stake
- **`updated_at`**: Timestamp autom√°tico em todas as tabelas
- **`assinaturas.status`**: Baseado em data_vencimento vs data atual

#### **Views Calculadas**
- **`canal_stats`**: ROI, receita, total apostas, assinantes
- **`tipster_dashboard`**: M√©tricas consolidadas por tipster
- **Estat√≠sticas gerais**: Contadores para dashboards

#### **Jobs Peri√≥dicos (Necess√°rios)**
- **Status de assinaturas**: Di√°rio (vencidas ‚Üí per√≠odo gra√ßa ‚Üí canceladas)
- **Sincroniza√ß√£o Telegram**: A cada 5 min (sa√∫de dos canais)
- **Limpeza de logs**: Mensal (manter apenas 90 dias)
- **Processamento de lista de espera**: Quando vaga abre

#### **C√°lculos Din√¢micos (Queries)**
- **M√©tricas de per√≠odo**: ROI 30d, 90d, YTD (baseado em filtros)
- **Rankings**: Top tipsters, canais (calculado em tempo real)
- **Dashboards**: Todos os gr√°ficos e estat√≠sticas

### **PIPELINE DE DADOS**

```
1. INPUT (Manual/Bot) ‚Üí 2. VALIDATION ‚Üí 3. TRIGGERS ‚Üí 4. VIEWS ‚Üí 5. FRONTEND
```

**Exemplo - Nova Aposta**:
1. **Bot recebe** template do Telegram
2. **Valida√ß√£o** de formato e autoriza√ß√£o
3. **Insert** em `apostas` + **trigger** calcula lucro
4. **View** `canal_stats` atualizada automaticamente
5. **Frontend** busca dados atualizados

---

## üéØ RESUMO EXECUTIVO

### **TABELAS CR√çTICAS**: 9 principais
### **RELACIONAMENTOS**: Bem definidos com integridade referencial
### **SINCRONIZA√á√ÉO**: 4 pontos cr√≠ticos identificados
### **AUTOMA√á√ÉO**: 80% dos dados calculados automaticamente
### **PERFORMANCE**: Views otimizadas + √≠ndices estrat√©gicos

### **PR√ìXIMOS PASSOS**:
1. ‚úÖ Implementar schema base
2. ‚úÖ Criar triggers autom√°ticos  
3. ‚úÖ Desenvolver views otimizadas
4. ‚úÖ Configurar jobs peri√≥dicos
5. ‚úÖ Implementar cache inteligente